Typical Usage
-------------

The typical usage of fits2itk for converting FITS files into "nrrd" files
for use with 3D Slicer is as follows:

   $ fits2itk -A -a 1000 -r -1 -s 1000 inputfile.fits outputfile.nrrd

The above command auto-scales the velocity axis, and then scales all of the
axes by 1000.  The right ascension axis is then flipped in order to present
it in the orientation to which astronomers are accustomed.  The pixel
values of the image are then all multiplied by 1000.

To save you a bit of typing, this can be abbreviated as

   $ fits2itk --typical inputfile.fits outputfile.nrrd


Auto Scaling
------------

The "-A" (velocity auto-scale) option works by fitting the velocity axis
into a cube that is defined by the larger of the two positional axes.  If
this option is specified in conjunction with other scaling options (such as
-v, for instance), then -A is applied first.  The other scaling option are
then also applied, multiplicatively.


Dealing with NaN's
------------------

"NaN" means "not a number".  This is a special floating point value
that represents undefined values.  FITS images often use NaN's to represent
undefined pixels, but unfortunately not all software can handle NaN's,
including some versions of 3D Slicer.  If you have images that contain
NaN's and want to use them with software that doesn't understand NaN's, you
can tell fits2itk to change all of the NaN's to a floating point value of
your choice using the "-N" option.  (Note: The value you specify is not
allowed to be 0, but it can be 0.000001, or somesuch.)

In addition to supporting undefined floating point values, FITS also has a
notion of an undefined value for a FITS image with integral pixel values.
Unlike for floating point values, however, there is no special integer
value that represents an undefined values.  Consequently, FITS allows the
creator of a FITS image to specify whatever integer he or she would like to
represent undefined pixels.  If, as it so happens, that you don't like the
specific integer chosen by the creator of a FITS image for representing
undefined pixels, you can remap the undefined value to a different integer
using the -N option of fits2itk.


CFITSIO Extended Filename Syntax
--------------------------------

fits2itk supports CFITSIO's "extended filename syntax", which allows all
sorts of interesting things.  For example, if you have a data cube with an
extra 1-pixel-thick fourth dimension, you can slice off the extra dimension
like so:

   $ fits2itk "input.fits[*,*,*,1:1][col #NAXIS=3]" output.nrrd

You can also specify a URL, rather than a filename, for the input file and
the input file will be automatically fetched via HTTP.  For the complete
manual on the extended filename syntax, see the CFITSIO User's Reference
Guide chapter on it here:

   http://heasarc.nasa.gov/docs/software/fitsio/c/c_user/node79.html


Debugging Output
----------------

Various bits of information that are useful to the developer of fits2itk,
but which probably aren't of much interest to you, can be output to stderr
during a file conversion by specifying "-D1" on the fits2itk command
line.


This Help Text
--------------

If this help text scrolled by too quickly for you to read, you might try
piping it through "more", like so:

  $ fits2itk --help | more

If you would like a terser help message than this one, use the "-h"
option instead of "--help"
