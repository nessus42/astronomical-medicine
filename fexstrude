#!/usr/bin/env python2.5

from optparse import OptionParser

usage = "usage: %prog {input-2D-FITS-file} {output-3D-FITS-file}"

# Parse the command line:
parser = OptionParser(usage=usage)
options, args = parser.parse_args()
if len(args) != 2:
   parser.error("An input file and an output file are required.")
inputFilepath = args[0]
outputFilepath = args[1]

import copy, Image, pyfits, os, sys
from numpy import array, zeros

# Read the input file:
try:
   fitsImage, fitsHeader = pyfits.getdata(inputFilepath, 0, header=True)
except IndexError:
   parser.error("The input file does not appear to be a FITS file.")

# Check to make sure that the input file is 2D:
if len(fitsImage.shape) != 2:
   parser.error("The input file must be a 2D FITS image.")

# Create a new 3D image, which has two copies of the input image as
# the two slices into the third dimension:
newImage = zeros((2,) + fitsImage.shape)
newImage[0, :, :] = fitsImage[:, :]
newImage[1, :, :] = fitsImage[:, :]

# Make a new header for the new image by copying the original header:
newHeader = fitsHeader.copy()

# Set the velocity axis to range from -c to +c:
newHeader.update("crval3", -3e8)
newHeader.update("crpix3", 1)
newHeader.update("cdelt3", 3e8 * 2)
newHeader.update("ctype3", "VELO-LSR")

# Write out the new FITS file:
os.remove(outputFilepath)
pyfits.writeto(outputFilepath, newImage, newHeader)
